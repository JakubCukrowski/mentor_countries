{"mappings":"ACAA,gBAAgB;IAoBZ,EACA,EACA,EArBJ,MAAM,EAAa,SAAS,aAAA,CAAc,QAIpC,EAAkB,SAAS,aAAA,CAAc,kBACzC,EAAe,SAAS,aAAA,CAAc,kBACtC,EAAgB,EAAa,gBAAA,CAAiB,MAI9C,EAAqB,SAAS,aAAA,CAAc,wBAG5C,EAAY,SAAS,aAAA,CAAc,eAGnC,EAAqB,SAAS,aAAA,CAAc,yBAQ5C,EAAsB,CAAC,EAAK,EAAK,EAAM,EAAY,EAAQ,KAC7D,IAAM,EAAU,SAAS,aAAA,CAAc,IACvC,CAAA,EAAQ,IAAA,CAAO,CAAC,SAAS,EAAE,EAAK,CAAC,CACjC,EAAQ,YAAA,CAAa,KAAM,CAAC,EAAE,EAAK,CAAC,EACpC,EAAQ,gBAAA,CAAiB,QAAS,GAClC,IAAM,EAAS,SAAS,aAAA,CAAc,OACtC,EAAQ,MAAA,CAAO,GACf,EAAO,SAAA,CAAU,GAAA,CAAI,mBACrB,EAAmB,MAAA,CAAO,GAC1B,EAAO,SAAA,CAAY,CAAC;iBACP,EAAE,EAAI,KAAK,EAAE,EAAI;;gBAElB,EAAE,EAAK;;mEAE4C,EAAE,EAAW,cAAA,CAAe,QAAS,CAAC,MAAO,SAAS,GAAG;;6EAE/C,EAAE,EAAO;+EACP,EAAE,EAAQ;;;IAGrF,CAAC,AACL,EAEA,IAAI,EAAM,qCACV,MAAM,EAAa,OAAO,QAAA,CAAS,QAAA,CAAS,KAAA,CAAM,KAC5C,EAAiB,CAAU,CAAC,EAAW,MAAA,CAAS,EAAE,CAIlD,EAAiB,UACnB,MAAM,MAAM,GACX,IAAA,CAAK,AAAA,GAAY,EAAS,IAAA,IAC1B,IAAA,CAAK,AAAA,IACF,EAAS,OAAA,CAAQ,AAAA,IACb,EACI,EAAQ,KAAA,CAAM,GAAA,CACd,EAAQ,IAAA,CACR,EAAQ,IAAA,CAAK,MAAA,CACb,EAAQ,UAAA,CACR,EAAQ,MAAA,CACR,EAAQ,OANZ,CAOJ,EACJ,GACC,KAAA,CAAM,AAAA,GAAO,QAAQ,GAAA,CAAI,GAC9B,EAIM,EAAwB,KAC1B,EAAa,SAAA,CAAU,MAAA,CAAO,UAClC,EAEA,EAAgB,gBAAA,CAAiB,QAAS,GAE1C,MAAM,EAAgB,AAAC,IACnB,EAAgB,SAAA,CAAY,EAAM,MAAA,CAAO,SAAzC,CACA,EAAS,EAAM,MAAA,CAAO,YAAA,CAAa,SACnC,EAAa,SAAA,CAAU,MAAA,CAAO,WAC9B,EAAmB,SAAA,CAAY,GAC/B,EAAM,CAAC,sCAAsC,EAAE,EAAO,WAAA,GAAc,CAAC,CACrE,GACJ,EAEA,EAAc,OAAA,CAAQ,AAAA,GAAU,EAAO,gBAAA,CAAiB,QAAS,GAEjE,mBAAkB;AAElB,MAAM,EAAkB,AAAC,IAEjB,AADJ,CAAA,EAAW,EAAE,MAAA,CAAO,KAApB,AAAA,EACa,MAAA,CAAS,IAClB,EAAM,CAAC,oCAAoC,EAAE,EAAS,CAAC,CACvD,EAAmB,SAAA,CAAY,GAC/B,KAGA,EAAE,MAAA,CAAO,KAAA,CAAM,MAAA,EAAU,GAAK,AAAW,KAAA,IAAX,GAC9B,EAAM,CAAC,sCAAsC,EAAE,EAAO,WAAA,GAAc,CAAC,CACrE,KACO,EAAE,MAAA,CAAO,KAAA,CAAM,MAAA,EAAU,GAAK,AAAW,KAAA,IAAX,IACrC,EAAM,qCACN,IAER,EAEA,EAAU,gBAAA,CAAiB,QAAS,EAEpC,4BAA2B;AAE3B,MAAM,EAAyB,CAC3B,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,KAEA,IAAM,EAAS,SAAS,aAAA,CAAc,OACtC,EAAO,SAAA,CAAU,GAAA,CAAI,0BACrB,IAAM,EAAY,SAAS,aAAA,CAAc,UACzC,EAAU,SAAA,CAAU,GAAA,CAAI,YACxB,EAAU,SAAA,CAAY,OACtB,EAAU,gBAAA,CAAiB,QAAS,KAE9B,EADF,AAAW,KAAA,IAAX,EACQ,qCACA,CAAC,sCAAsC,EAAE,EAAO,WAAA,GAAc,CAAC,CACvE,EAAmB,SAAA,CAAY,GAC/B,IACA,QAAQ,IAAR,GACA,GACJ,GACA,EAAmB,MAAA,CAAO,GAC1B,EAAO,SAAA,CAAY,CAAC;;qBAEH,EAAE,EAAI,KAAK,EAAE,EAAI;;;wBAGd,EAAE,EAAkB;qDACS,EAAE,EAAW;;;wBAG1C,EAAE,EAAW,cAAA,CAAe,SAAS;;;;wBAIrC,EAAE,EAAc;;;;wBAIhB,EAAE,EAAU;;;;wBAIZ,EAAE,EAAQ;;;;;;wBAMV,EAAE,EAAe;;;;wBAIjB,EAAE,EAAW;;;;wBAIb,EAAE,EAAU;;;;;IAKhC,CAAC,CACD,EAAO,OAAA,CAAQ,EACnB,EAIM,EAAgB,MAAO,IACzB,EAAE,cAAF,GACA,EAAmB,SAAA,CAAY,GAC/B,EAAmB,MAAnB,GACA,EAAc,EAAE,MAAA,CAAO,OAAA,CAAQ,KAAK,EAApC,CACA,EAAM,CAAC,oCAAoC,EAAE,EAAY,cAAc,CAAC,CACxE,QAAQ,SAAA,CAAU,KAAM,KAAM,CAAC,SAAS,EAAE,EAAY,CAAC,EACvD,MAAM,MAAM,GACP,IAAA,CAAK,AAAA,GAAY,EAAS,IAAA,IAC1B,IAAA,CAAK,AAAA,IACF,EACI,CAAQ,CAAC,EAAE,CAAC,KAAA,CAAM,GAAA,CAClB,CAAQ,CAAC,EAAE,CAAC,IAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,MAAA,CACjB,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,UAAA,EAAY,MAAA,CAAS,EAC9C,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,UAAA,CAAW,CAAC,EAAE,CAAC,MAAA,CAC9C,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,UAAA,CAAW,CAAC,EAAE,CAAC,MAAA,CACpD,CAAQ,CAAC,EAAE,CAAC,UAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,MAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,SAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,OAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAClB,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,UAAA,CAAW,CAAC,EAAE,CAAC,IAAA,CACzC,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,SAAA,EAAW,IAAA,CAAK,MAElD,EACR,EAIM,EAA2B,KAC7B,IAAM,EAAwB,SAAS,aAAA,CAAc,OACrD,EAAsB,SAAA,CAAU,GAAA,CAAI,YAAa,wBACjD,EAAW,MAAA,CAAO,GAElB,IAAM,EAAe,SAAS,aAAA,CAAc,OAC5C,EAAa,SAAA,CAAU,GAAA,CAAI,aAC3B,EAAsB,MAAA,CAAO,GAE7B,IAAM,EAAmB,SAAS,aAAA,CAAc,QAChD,EAAiB,SAAA,CAAU,GAAA,CAAI,sBAC/B,EAAa,MAAA,CAAO,GAEpB,IAAM,EAAiB,SAAS,aAAA,CAAc,SAC9C,EAAe,YAAA,CAAa,OAAQ,QACpC,EAAe,YAAA,CAAa,cAAe,2BAC3C,EAAe,SAAA,CAAU,GAAA,CAAI,cAC7B,EAAe,gBAAA,CAAiB,QAAS,GACzC,EAAiB,MAAA,CAAO,GAExB,IAAM,EAAc,SAAS,aAAA,CAAc,OAC3C,EAAY,SAAA,CAAU,GAAA,CAAI,YAC1B,EAAsB,MAAA,CAAO,GAE7B,IAAM,EAAoB,SAAS,aAAA,CAAc,UACjD,EAAkB,SAAA,CAAU,GAAA,CAAI,iBAChC,EAAkB,SAAA,CAAY,mBAC9B,EAAkB,gBAAA,CAAiB,QAAS,GAC5C,EAAY,MAAA,CAAO,GAEnB,IAAM,EAAkB,SAAS,aAAA,CAAc,MAC/C,EAAgB,SAAA,CAAU,GAAA,CAAI,iBAC9B,EAAY,MAAA,CAAO,GAEnB,IAAM,EAAe,SAAS,aAAA,CAAc,MACtC,EAAe,SAAS,aAAA,CAAc,MACtC,EAAe,SAAS,aAAA,CAAc,MACtC,EAAe,SAAS,aAAA,CAAc,MACtC,EAAe,SAAS,aAAA,CAAc,MAE5C,EAAa,YAAA,CAAa,QAAS,UACnC,EAAa,YAAA,CAAa,QAAS,YACnC,EAAa,YAAA,CAAa,QAAS,QACnC,EAAa,YAAA,CAAa,QAAS,UACnC,EAAa,YAAA,CAAa,QAAS,WAEnC,EAAa,gBAAA,CAAiB,QAAS,GACvC,EAAa,gBAAA,CAAiB,QAAS,GACvC,EAAa,gBAAA,CAAiB,QAAS,GACvC,EAAa,gBAAA,CAAiB,QAAS,GACvC,EAAa,gBAAA,CAAiB,QAAS,GAEvC,EAAgB,MAAA,CAAO,EAAc,EAAc,EAAc,EAAc,EAEnF,CAEA,6DAA4D;AAE3B,MAA7B,OAAO,QAAA,CAAS,QAAA,CAChB,KAEA,EAAM,CAAC,oCAAoC,EAAE,EAAe,cAAc,CAAC,CAC3E,EAAmB,MAAnB,GACA,MAAM,GACD,IAAA,CAAK,AAAA,GAAY,EAAS,IAAA,IAC1B,IAAA,CAAK,AAAA,IACF,EACI,CAAQ,CAAC,EAAE,CAAC,KAAA,CAAM,GAAA,CAClB,CAAQ,CAAC,EAAE,CAAC,IAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,MAAA,CACjB,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,UAAA,EAAY,MAAA,CAAS,EAC9C,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,UAAA,CAAW,CAAC,EAAE,CAAC,MAAA,CAC9C,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,IAAA,CAAK,UAAA,CAAW,CAAC,EAAE,CAAC,MAAA,CACpD,CAAQ,CAAC,EAAE,CAAC,UAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,MAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,SAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,OAAA,CACZ,CAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAClB,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,UAAA,CAAW,CAAC,EAAE,CAAC,IAAA,CACzC,OAAO,MAAA,CAAO,CAAQ,CAAC,EAAE,CAAC,SAAA,EAAW,IAAA,CAAK,MAElD,G,4D","sources":["<anon>","src/main.js"],"sourcesContent":["//section id=top\nconst topSection = document.querySelector(\"#top\");\n//dropdown menu\nconst selectContinent = document.querySelector(\".dropdown-menu\");\nconst dropdownList = document.querySelector(\".dropdown-list\");\nconst selectOptions = dropdownList.querySelectorAll(\"li\");\n//countries\nconst countriesContainer = document.querySelector(\".countries-container\");\n//searchbar\nconst searchbar = document.querySelector(\".search-bar\");\n//utilities container to delete\nconst utilitiesContainer = document.querySelector(\".utilities__container\");\n//url api changers for filtering\nlet region;\nlet endpoint;\nlet countryName;\n//country div\nconst addCountryStructure = (src, alt, name, population, region, capital)=>{\n    const newLink = document.createElement(\"a\");\n    newLink.href = `/country/${name}`;\n    newLink.setAttribute(\"id\", `${name}`);\n    newLink.addEventListener(\"click\", countryDetail);\n    const newDiv = document.createElement(\"div\");\n    newLink.append(newDiv);\n    newDiv.classList.add(\"country-wrapper\");\n    countriesContainer.append(newLink);\n    newDiv.innerHTML = `\r\n        <img src=${src} alt=${alt}>\r\n        <div class=\"content\">\r\n            <h2>${name}</h2>\r\n            <p class=\"population\">\r\n                <span class=\"content-text-bold\">Population:</span> ${population.toLocaleString(\"en-us\", {\n        style: \"decimal\"\n    })}\r\n            </p>\r\n            <p class=\"region\"><span class=\"content-text-bold\">Region:</span> ${region}</p>\r\n            <p class=\"capital\"><span class=\"content-text-bold\">Capital:</span> ${capital}</p>\r\n        </div>\r\n\r\n    `;\n};\nlet url = \"https://restcountries.com/v3.1/all\";\nconst currentURL = window.location.pathname.split(\"/\");\nconst currentCountry = currentURL[currentURL.length - 1];\n//handle countries\nconst fetchCountries = async ()=>{\n    await fetch(url).then((response)=>response.json()).then((response)=>{\n        response.forEach((country)=>{\n            addCountryStructure(country.flags.png, country.flag, country.name.common, country.population, country.region, country.capital);\n        });\n    }).catch((err)=>console.log(err));\n};\n//handle dropdown menu\nconst handleSelectContinent = ()=>{\n    dropdownList.classList.toggle(\"blocked\");\n};\nselectContinent.addEventListener(\"click\", handleSelectContinent);\nconst handleOptions = (event)=>{\n    selectContinent.innerText = event.target.innerText;\n    region = event.target.getAttribute(\"value\");\n    dropdownList.classList.remove(\"blocked\");\n    countriesContainer.innerHTML = \"\";\n    url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\n    fetchCountries();\n};\nselectOptions.forEach((option)=>option.addEventListener(\"click\", handleOptions));\n//handle searchbar\nconst handleSearchbar = (e)=>{\n    endpoint = e.target.value;\n    if (endpoint.length > 0) {\n        url = `https://restcountries.com/v3.1/name/${endpoint}`;\n        countriesContainer.innerHTML = \"\";\n        fetchCountries();\n    }\n    if (e.target.value.length <= 0 && region !== undefined) {\n        url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\n        fetchCountries();\n    } else if (e.target.value.length <= 0 && region === undefined) {\n        url = \"https://restcountries.com/v3.1/all\";\n        fetchCountries();\n    }\n};\nsearchbar.addEventListener(\"input\", handleSearchbar);\n//single country structure \nconst singleCountryStructure = (src, alt, singleCountryName, nativeName, population, countryRegion, subregion, capital, topLevelDomain, currencies, languages)=>{\n    const newDiv = document.createElement(\"div\");\n    newDiv.classList.add(\"single-country-wrapper\");\n    const newButton = document.createElement(\"button\");\n    newButton.classList.add(\"back-btn\");\n    newButton.innerText = \"Back\";\n    newButton.addEventListener(\"click\", ()=>{\n        region === undefined ? url = \"https://restcountries.com/v3.1/all\" : url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\n        countriesContainer.innerHTML = \"\";\n        createUtilitiesContainer();\n        history.back();\n        fetchCountries();\n    });\n    countriesContainer.append(newDiv);\n    newDiv.innerHTML = `\r\n        <div class='country-info-wrapper'>\r\n            <img src=${src} alt=${alt} >\r\n            <div class='content-wrapper'>\r\n                <div class='left-side-content'>\r\n                    <h2>${singleCountryName}</h2>\r\n                    <p><strong>Native name: </strong>${nativeName}</p>\r\n                    <p>\r\n                        <strong>Population: </strong>\r\n                        ${population.toLocaleString(\"en-US\")}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Region: </strong>\r\n                        ${countryRegion}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Sub Region: </strong>\r\n                        ${subregion}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Capital: </strong>\r\n                        ${capital}\r\n                    </p>\r\n                </div>\r\n                <div class='right-side-content'>\r\n                    <p>\r\n                        <strong>Top Level Domain: </strong>\r\n                        ${topLevelDomain}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Currencies: </strong>\r\n                        ${currencies}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Languages: </strong>\r\n                        ${languages}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `;\n    newDiv.prepend(newButton);\n};\n// country details page\nconst countryDetail = async (e)=>{\n    e.preventDefault();\n    countriesContainer.innerHTML = \"\";\n    utilitiesContainer.remove();\n    countryName = e.target.closest(\"a\").id;\n    url = `https://restcountries.com/v3.1/name/${countryName}?fullText=true`;\n    history.pushState(null, null, `/country/${countryName}`);\n    await fetch(url).then((response)=>response.json()).then((response)=>{\n        singleCountryStructure(response[0].flags.png, response[0].flag, response[0].name.common, Object.values(response[0].name.nativeName).length > 2 ? Object.values(response[0].name.nativeName)[2].common : Object.values(response[0].name.nativeName)[0].common, response[0].population, response[0].region, response[0].subregion, response[0].capital, response[0].tld[0], Object.values(response[0].currencies)[0].name, Object.values(response[0].languages).join(\", \"));\n    });\n};\n//create utilities container if deleted\nconst createUtilitiesContainer = ()=>{\n    const newUtilitiesContainer = document.createElement(\"div\");\n    newUtilitiesContainer.classList.add(\"container\", \"utilities__container\");\n    topSection.append(newUtilitiesContainer);\n    const utilitiesDiv = document.createElement(\"div\");\n    utilitiesDiv.classList.add(\"utilities\");\n    newUtilitiesContainer.append(utilitiesDiv);\n    const searchbarWrapper = document.createElement(\"span\");\n    searchbarWrapper.classList.add(\"search-bar-wrapper\");\n    utilitiesDiv.append(searchbarWrapper);\n    const searchbarInput = document.createElement(\"input\");\n    searchbarInput.setAttribute(\"type\", \"text\");\n    searchbarInput.setAttribute(\"placeholder\", \"Search for a country...\");\n    searchbarInput.classList.add(\"search-bar\");\n    searchbarInput.addEventListener(\"input\", handleSearchbar);\n    searchbarWrapper.append(searchbarInput);\n    const dropdownDiv = document.createElement(\"div\");\n    dropdownDiv.classList.add(\"dropdown\");\n    newUtilitiesContainer.append(dropdownDiv);\n    const newDropdownButton = document.createElement(\"button\");\n    newDropdownButton.classList.add(\"dropdown-menu\");\n    newDropdownButton.innerText = \"Filter by Region\";\n    newDropdownButton.addEventListener(\"click\", handleSelectContinent);\n    dropdownDiv.append(newDropdownButton);\n    const newDropdownList = document.createElement(\"ul\");\n    newDropdownList.classList.add(\"dropdown-list\");\n    dropdownDiv.append(dropdownList);\n    const newLiOption1 = document.createElement(\"li\");\n    const newLiOption2 = document.createElement(\"li\");\n    const newLiOption3 = document.createElement(\"li\");\n    const newLiOption4 = document.createElement(\"li\");\n    const newLiOption5 = document.createElement(\"li\");\n    newLiOption1.setAttribute(\"value\", \"Africa\");\n    newLiOption2.setAttribute(\"value\", \"Americas\");\n    newLiOption3.setAttribute(\"value\", \"Asia\");\n    newLiOption4.setAttribute(\"value\", \"Europe\");\n    newLiOption5.setAttribute(\"value\", \"Oceania\");\n    newLiOption1.addEventListener(\"click\", handleOptions);\n    newLiOption2.addEventListener(\"click\", handleOptions);\n    newLiOption3.addEventListener(\"click\", handleOptions);\n    newLiOption4.addEventListener(\"click\", handleOptions);\n    newLiOption5.addEventListener(\"click\", handleOptions);\n    newDropdownList.append(newLiOption1, newLiOption2, newLiOption3, newLiOption4, newLiOption5);\n};\n//on page load display all, after refresh depends on the URL\nif (window.location.pathname === \"/\") fetchCountries();\nelse {\n    url = `https://restcountries.com/v3.1/name/${currentCountry}?fullText=true`;\n    utilitiesContainer.remove();\n    fetch(url).then((response)=>response.json()).then((response)=>{\n        singleCountryStructure(response[0].flags.png, response[0].flag, response[0].name.common, Object.values(response[0].name.nativeName).length > 2 ? Object.values(response[0].name.nativeName)[2].common : Object.values(response[0].name.nativeName)[0].common, response[0].population, response[0].region, response[0].subregion, response[0].capital, response[0].tld[0], Object.values(response[0].currencies)[0].name, Object.values(response[0].languages).join(\", \"));\n    });\n}\n\n//# sourceMappingURL=index.fc1f1223.js.map\n","//section id=top\r\nconst topSection = document.querySelector('#top');\r\n\r\n//dropdown menu\r\n\r\nconst selectContinent = document.querySelector('.dropdown-menu');\r\nconst dropdownList = document.querySelector('.dropdown-list');\r\nconst selectOptions = dropdownList.querySelectorAll('li');\r\n\r\n//countries\r\n\r\nconst countriesContainer = document.querySelector('.countries-container');\r\n\r\n//searchbar\r\nconst searchbar = document.querySelector('.search-bar');\r\n\r\n//utilities container to delete\r\nconst utilitiesContainer = document.querySelector('.utilities__container')\r\n\r\n//url api changers for filtering\r\nlet region;\r\nlet endpoint;\r\nlet countryName;\r\n\r\n//country div\r\nconst addCountryStructure = (src, alt, name, population, region, capital) => {\r\n    const newLink = document.createElement('a');\r\n    newLink.href = `/country/${name}`\r\n    newLink.setAttribute('id', `${name}`);\r\n    newLink.addEventListener('click', countryDetail)\r\n    const newDiv = document.createElement('div');\r\n    newLink.append(newDiv);\r\n    newDiv.classList.add('country-wrapper');\r\n    countriesContainer.append(newLink);\r\n    newDiv.innerHTML = `\r\n        <img src=${src} alt=${alt}>\r\n        <div class=\"content\">\r\n            <h2>${name}</h2>\r\n            <p class=\"population\">\r\n                <span class=\"content-text-bold\">Population:</span> ${population.toLocaleString('en-us', {style: 'decimal'})}\r\n            </p>\r\n            <p class=\"region\"><span class=\"content-text-bold\">Region:</span> ${region}</p>\r\n            <p class=\"capital\"><span class=\"content-text-bold\">Capital:</span> ${capital}</p>\r\n        </div>\r\n\r\n    `\r\n}\r\n\r\nlet url = 'https://restcountries.com/v3.1/all';\r\nconst currentURL = window.location.pathname.split('/');\r\nconst currentCountry = currentURL[currentURL.length - 1]\r\n\r\n//handle countries\r\n\r\nconst fetchCountries = async () => {\r\n    await fetch(url)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        response.forEach(country => {\r\n            addCountryStructure(\r\n                country.flags.png, \r\n                country.flag, \r\n                country.name.common, \r\n                country.population, \r\n                country.region,\r\n                country.capital)\r\n        });\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n//handle dropdown menu\r\n\r\nconst handleSelectContinent = () => {\r\n    dropdownList.classList.toggle('blocked');\r\n}\r\n\r\nselectContinent.addEventListener('click', handleSelectContinent)\r\n\r\nconst handleOptions = (event) => {\r\n    selectContinent.innerText = event.target.innerText;\r\n    region = event.target.getAttribute('value');\r\n    dropdownList.classList.remove('blocked');\r\n    countriesContainer.innerHTML = '';\r\n    url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\r\n    fetchCountries();\r\n}\r\n\r\nselectOptions.forEach(option => option.addEventListener('click', handleOptions))\r\n\r\n//handle searchbar\r\n\r\nconst handleSearchbar = (e) => {\r\n    endpoint = e.target.value;\r\n    if (endpoint.length > 0) {\r\n        url = `https://restcountries.com/v3.1/name/${endpoint}`;\r\n        countriesContainer.innerHTML = '';\r\n        fetchCountries();\r\n    }\r\n    \r\n    if (e.target.value.length <= 0 && region !== undefined) {\r\n        url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\r\n        fetchCountries();\r\n    } else if (e.target.value.length <= 0 && region === undefined) {\r\n        url = 'https://restcountries.com/v3.1/all';\r\n        fetchCountries();\r\n    }\r\n}\r\n\r\nsearchbar.addEventListener('input', handleSearchbar)\r\n\r\n//single country structure \r\n\r\nconst singleCountryStructure = (\r\n    src,\r\n    alt,\r\n    singleCountryName,\r\n    nativeName,\r\n    population,\r\n    countryRegion,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies,\r\n    languages,\r\n    ) => {\r\n    const newDiv = document.createElement('div');\r\n    newDiv.classList.add('single-country-wrapper')\r\n    const newButton = document.createElement('button');\r\n    newButton.classList.add('back-btn');\r\n    newButton.innerText = 'Back';\r\n    newButton.addEventListener('click', () => {\r\n        region === undefined \r\n        ? url = 'https://restcountries.com/v3.1/all' \r\n        : url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\r\n        countriesContainer.innerHTML = '';\r\n        createUtilitiesContainer();\r\n        history.back();\r\n        fetchCountries();\r\n    })\r\n    countriesContainer.append(newDiv);\r\n    newDiv.innerHTML = `\r\n        <div class='country-info-wrapper'>\r\n            <img src=${src} alt=${alt} >\r\n            <div class='content-wrapper'>\r\n                <div class='left-side-content'>\r\n                    <h2>${singleCountryName}</h2>\r\n                    <p><strong>Native name: </strong>${nativeName}</p>\r\n                    <p>\r\n                        <strong>Population: </strong>\r\n                        ${population.toLocaleString('en-US')}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Region: </strong>\r\n                        ${countryRegion}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Sub Region: </strong>\r\n                        ${subregion}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Capital: </strong>\r\n                        ${capital}\r\n                    </p>\r\n                </div>\r\n                <div class='right-side-content'>\r\n                    <p>\r\n                        <strong>Top Level Domain: </strong>\r\n                        ${topLevelDomain}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Currencies: </strong>\r\n                        ${currencies}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Languages: </strong>\r\n                        ${languages}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n    newDiv.prepend(newButton);\r\n}\r\n\r\n// country details page\r\n\r\nconst countryDetail = async (e) => {\r\n    e.preventDefault();\r\n    countriesContainer.innerHTML = '';\r\n    utilitiesContainer.remove();\r\n    countryName = e.target.closest('a').id;\r\n    url = `https://restcountries.com/v3.1/name/${countryName}?fullText=true`\r\n    history.pushState(null, null, `/country/${countryName}`)\r\n    await fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            singleCountryStructure(\r\n                response[0].flags.png, \r\n                response[0].flag,\r\n                response[0].name.common,\r\n                Object.values(response[0].name.nativeName).length > 2 \r\n                    ? Object.values(response[0].name.nativeName)[2].common\r\n                    : Object.values(response[0].name.nativeName)[0].common,\r\n                response[0].population,\r\n                response[0].region,\r\n                response[0].subregion,\r\n                response[0].capital, \r\n                response[0].tld[0],\r\n                Object.values(response[0].currencies)[0].name,\r\n                Object.values(response[0].languages).join(', ')\r\n            )\r\n        })\r\n}\r\n\r\n//create utilities container if deleted\r\n\r\nconst createUtilitiesContainer = () => {\r\n    const newUtilitiesContainer = document.createElement('div');\r\n    newUtilitiesContainer.classList.add('container', 'utilities__container');\r\n    topSection.append(newUtilitiesContainer);\r\n\r\n    const utilitiesDiv = document.createElement('div');\r\n    utilitiesDiv.classList.add('utilities');\r\n    newUtilitiesContainer.append(utilitiesDiv);\r\n\r\n    const searchbarWrapper = document.createElement('span');\r\n    searchbarWrapper.classList.add('search-bar-wrapper');\r\n    utilitiesDiv.append(searchbarWrapper);\r\n\r\n    const searchbarInput = document.createElement('input');\r\n    searchbarInput.setAttribute('type', 'text');\r\n    searchbarInput.setAttribute('placeholder', 'Search for a country...');\r\n    searchbarInput.classList.add('search-bar');\r\n    searchbarInput.addEventListener('input', handleSearchbar);\r\n    searchbarWrapper.append(searchbarInput);\r\n\r\n    const dropdownDiv = document.createElement('div');\r\n    dropdownDiv.classList.add('dropdown');\r\n    newUtilitiesContainer.append(dropdownDiv);\r\n\r\n    const newDropdownButton = document.createElement('button');\r\n    newDropdownButton.classList.add('dropdown-menu');\r\n    newDropdownButton.innerText = 'Filter by Region';\r\n    newDropdownButton.addEventListener('click', handleSelectContinent)\r\n    dropdownDiv.append(newDropdownButton);\r\n\r\n    const newDropdownList = document.createElement('ul');\r\n    newDropdownList.classList.add('dropdown-list');\r\n    dropdownDiv.append(dropdownList);\r\n\r\n    const newLiOption1 = document.createElement('li'); \r\n    const newLiOption2 = document.createElement('li'); \r\n    const newLiOption3 = document.createElement('li'); \r\n    const newLiOption4 = document.createElement('li'); \r\n    const newLiOption5 = document.createElement('li'); \r\n\r\n    newLiOption1.setAttribute('value', 'Africa');\r\n    newLiOption2.setAttribute('value', 'Americas');\r\n    newLiOption3.setAttribute('value', 'Asia');\r\n    newLiOption4.setAttribute('value', 'Europe');\r\n    newLiOption5.setAttribute('value', 'Oceania');\r\n\r\n    newLiOption1.addEventListener('click', handleOptions)\r\n    newLiOption2.addEventListener('click', handleOptions)\r\n    newLiOption3.addEventListener('click', handleOptions)\r\n    newLiOption4.addEventListener('click', handleOptions)\r\n    newLiOption5.addEventListener('click', handleOptions)\r\n\r\n    newDropdownList.append(newLiOption1, newLiOption2, newLiOption3, newLiOption4, newLiOption5)\r\n\r\n}\r\n\r\n//on page load display all, after refresh depends on the URL\r\n\r\nif (window.location.pathname === '/') {\r\n    fetchCountries();\r\n} else {\r\n    url = `https://restcountries.com/v3.1/name/${currentCountry}?fullText=true`;\r\n    utilitiesContainer.remove();\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            singleCountryStructure(\r\n                response[0].flags.png, \r\n                response[0].flag,\r\n                response[0].name.common,\r\n                Object.values(response[0].name.nativeName).length > 2 \r\n                    ? Object.values(response[0].name.nativeName)[2].common\r\n                    : Object.values(response[0].name.nativeName)[0].common,\r\n                response[0].population,\r\n                response[0].region,\r\n                response[0].subregion,\r\n                response[0].capital, \r\n                response[0].tld[0],\r\n                Object.values(response[0].currencies)[0].name,\r\n                Object.values(response[0].languages).join(', ')\r\n            )\r\n        })\r\n}"],"names":["region","endpoint","countryName","topSection","document","querySelector","selectContinent","dropdownList","selectOptions","querySelectorAll","countriesContainer","searchbar","utilitiesContainer","addCountryStructure","src","alt","name","population","capital","newLink","createElement","href","setAttribute","addEventListener","countryDetail","newDiv","append","classList","add","innerHTML","toLocaleString","style","url","currentURL","window","location","pathname","split","currentCountry","length","fetchCountries","fetch","then","response","json","forEach","country","flags","png","flag","common","catch","err","console","log","handleSelectContinent","toggle","handleOptions","event","innerText","target","getAttribute","remove","toLowerCase","option","handleSearchbar","e","value","undefined","singleCountryStructure","singleCountryName","nativeName","countryRegion","subregion","topLevelDomain","currencies","languages","newButton","createUtilitiesContainer","history","back","prepend","preventDefault","closest","id","pushState","Object","values","tld","join","newUtilitiesContainer","utilitiesDiv","searchbarWrapper","searchbarInput","dropdownDiv","newDropdownButton","newDropdownList","newLiOption1","newLiOption2","newLiOption3","newLiOption4","newLiOption5"],"version":3,"file":"index.fc1f1223.js.map"}