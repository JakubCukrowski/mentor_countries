{"mappings":"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","sources":["src/main.js"],"sourcesContent":["//dropdown menu\r\n\r\nconst selectContinent = document.querySelector('.dropdown-menu');\r\nconst dropdownList = document.querySelector('.dropdown-list');\r\nconst selectOptions = dropdownList.querySelectorAll('li');\r\n\r\n//countries\r\n\r\nconst countriesContainer = document.querySelector('.countries-container');\r\n\r\n//searchbar\r\nconst searchbar = document.querySelector('.search-bar')\r\n\r\n//utilities\r\nconst utilities = document.querySelector('.utilities')\r\n\r\n//url api changers for filtering\r\nlet region;\r\nlet endpoint;\r\nlet countryName;\r\n\r\n//country div\r\nconst addCountryStructure = (src, alt, name, population, region, capital) => {\r\n    const newLink = document.createElement('a');\r\n    // newLink.setAttribute('href', `${name}`);\r\n    newLink.href = `/country/${name}`\r\n    newLink.setAttribute('id', `${name}`);\r\n    newLink.addEventListener('click', countryDetail)\r\n    const newDiv = document.createElement('div');\r\n    newLink.append(newDiv);\r\n    newDiv.classList.add('country-wrapper');\r\n    countriesContainer.append(newLink);\r\n    newDiv.innerHTML = `\r\n        <img src=${src} alt=${alt}>\r\n        <div class=\"content\">\r\n            <h2>${name}</h2>\r\n            <p class=\"population\">\r\n                <span class=\"content-text-bold\">Population:</span> ${population.toLocaleString('en-us', {style: 'decimal'})}\r\n            </p>\r\n            <p class=\"region\"><span class=\"content-text-bold\">Region:</span> ${region}</p>\r\n            <p class=\"capital\"><span class=\"content-text-bold\">Capital:</span> ${capital}</p>\r\n        </div>\r\n\r\n    `\r\n}\r\n\r\nlet url = 'https://restcountries.com/v3.1/all';\r\n\r\n//handle countries\r\n\r\nconst fetchCountries = async () => {\r\n    await fetch(url)\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        response.forEach(country => {\r\n            addCountryStructure(\r\n                country.flags.png, \r\n                country.flag, \r\n                country.name.common, \r\n                country.population, \r\n                country.region,\r\n                country.capital)\r\n        });\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n//handle dropdown menu\r\n\r\nselectContinent.addEventListener('click', () => {\r\n    dropdownList.classList.toggle('blocked');\r\n})\r\n\r\nselectOptions.forEach(option => option.addEventListener('click', (event) => {\r\n    selectContinent.innerText = event.target.innerText;\r\n    region = event.target.getAttribute('value');\r\n    dropdownList.classList.remove('blocked');\r\n    countriesContainer.innerHTML = '';\r\n    url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\r\n    fetchCountries();\r\n}))\r\n\r\n//handle searchbar\r\n\r\nsearchbar.addEventListener('input', () => {\r\n    endpoint = searchbar.value;\r\n    if (endpoint.length > 0) {\r\n        url = `https://restcountries.com/v3.1/name/${endpoint}`;\r\n    }\r\n    countriesContainer.innerHTML = '';\r\n    fetchCountries();\r\n\r\n    if (searchbar.value.length <= 0 && region !== undefined) {\r\n        url = `https://restcountries.com/v3.1/region/${region.toLowerCase()}`;\r\n        fetchCountries();\r\n    } else if (searchbar.value.length <= 0 && region === undefined) {\r\n        url = 'https://restcountries.com/v3.1/all';\r\n        fetchCountries();\r\n    }\r\n})\r\n\r\n//single country structure \r\n\r\nconst singleCountryStructure = (\r\n    src,\r\n    alt,\r\n    singleCountryName,\r\n    nativeName,\r\n    population,\r\n    region,\r\n    subregion,\r\n    capital,\r\n    // topLevelDomain,\r\n    // currencies,\r\n    // languages,\r\n    ) => {\r\n    const newDiv = document.createElement('div');\r\n    newDiv.classList.add('single-country-wrapper')\r\n    countriesContainer.append(newDiv)\r\n    newDiv.innerHTML = `\r\n        <button class='back-btn'>Back</button>\r\n        <div class='country-info-wrapper'>\r\n            <img src=${src} alt=${alt} >\r\n            <div class='content-wrapper'>\r\n                <div class='left-side-content'>\r\n                    <h2>${singleCountryName}</h2>\r\n                    <p><strong>Native name: </strong>${nativeName}</p>\r\n                    <p>\r\n                        <strong>Population: </strong>\r\n                        ${population.toLocaleString('en-US')}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Region: </strong>\r\n                        ${region}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Sub Region: </strong>\r\n                        ${subregion}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Capital: </strong>\r\n                        ${capital}\r\n                    </p>\r\n                </div>\r\n                <div class='right-side-content'>\r\n                    <p>\r\n                        <strong>Top Level Domain: </strong>\r\n                        ${topLevelDomain}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n}\r\n\r\n// country details page\r\n\r\nconst countryDetail = async (e) => {\r\n    e.preventDefault();\r\n    countriesContainer.innerHTML = '';\r\n    utilities.style.display = 'none';\r\n    countryName = e.target.closest('a').id;\r\n    url = `https://restcountries.com/v3.1/name/${countryName}?fullText=true`\r\n    await fetch(url)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            console.log(response[0].name);\r\n            singleCountryStructure(\r\n                response[0].flags.png, \r\n                response[0].flag,\r\n                response[0].name.common,\r\n                Object.values(response[0].name.nativeName).length > 2 \r\n                    ? Object.values(response[0].name.nativeName)[2].common\r\n                    : Object.values(response[0].name.nativeName)[0].common,\r\n                response[0].population,\r\n                response[0].region,\r\n                response[0].subregion,\r\n                response[0].capital,                \r\n            )\r\n        })\r\n}\r\n\r\nfetchCountries();"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}